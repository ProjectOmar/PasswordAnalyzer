#imports
import streamlit as st
from streamlit_option_menu import option_menu
import zxcvbn
#from streamlit_navigation_bar import st_navbar

#removing streamlit menu
st.markdown("""
<style>
    .st-emotion-cache-w3nhqi.ef3psqc5
            {
            visibility: hidden;
            }
            </style>
""", unsafe_allow_html=True)



#creating popout navigation sidebar
with st.sidebar:
    selected = option_menu(
    menu_title = "Password Wizards",
    options = ["Password Analyzer", "Feedback", "About"],
    icons = ["lock", "reply", "file-earmark-person"],
    default_index = 0,
)


#password analyzer
if selected == "Password Analyzer":

    #header for password analyzer
    st.markdown("<h1 style='text-align:left; border-radius:10px; font-size:50px;'>Password Analyzer</h1>", unsafe_allow_html=True)

    #divider
    st.divider()


    #user input set as password
    password = st.text_input("Enter your password", type="password")


    #button that triggers password analyzer logic
    if st.button("Analyze"):

        #checks to see if password meets length
        if len(password) >= 12:
            
            #pass results using zxcvbn
            result = zxcvbn.zxcvbn(password)

            #password is given a score
            password_score = result['score']
            
            #information displayed when score is 0
            if password_score == 0:
                st.markdown(f"""
                <div style="padding: 10px; border: 2px solid #E85F5C; background-color: #f8d7da;">
                    <span style='color:#EF233C'>Score: {result['score']}</span><br>
                    <span style='color:#EF233C'>Strength Rating: Very Weak </span>
                    </br><span style='color:#EF233C'>Suggestions: {result['feedback']}</span>
                    </br><span style='color:#EF233C'>Crack Times: {result['crack_times_display']['online_no_throttling_10_per_second']} </span>
                    </div>
                    """, unsafe_allow_html=True)
                st.info("")
                

            #information displayed when score is 1
            elif password_score == 1:
                st.markdown(f"""
                    <div style="padding: 10px; border: 2px solid #E85F5C; background-color: #f8d7da;">
                    <span style='color:#EF233C'>Score: {result['score']}</span><br>
                    <span style='color:#EF233C'; font-size:30px;>Strength Rating: Weak</span>
                    </br><span style='color:#EF233C'>Suggestions: {result['feedback']}</span>
                    </br><span style='color:#EF233C'>Crack Times: {result['crack_times_display']['online_no_throttling_10_per_second']} </span>
                    </div>
                     """, unsafe_allow_html=True)
            
            #information displayed when score is 2
            elif password_score == 2:
                st.markdown(f"""
                    <div style="padding: 10px; border: 2px solid orange; background-color: #fff3cd;">
                    <span style='color:orange'>Score: {result['score']}</span><br>
                    <span style='color:orange'; font-size:30px;>Strength Rating: Moderate</span>
                    </br><span style='color:#EF233C'>Suggestions: {result['feedback']}</span>
                    </br><span style='color:green'>Crack Times: {result['crack_times_display']['online_no_throttling_10_per_second']} </span>
                    </div>
                    """, unsafe_allow_html=True)

            #information displayed when score is 3
            elif password_score == 3:
                st.markdown(f"""
                    <div style="padding: 10px; border: 2px solid #8B8000; background-color: #FFFFC5;">
                    <span style='color:#8B8000'>Score: {result['score']}</span><br>
                    <span style='color:#8B8000'; font-size:30px;>Strength Rating: Strong</span>
                    </br><span style='color:#8B8000'>Suggestions: {result['feedback']}</span>
                    </br><span style='color:#8B8000'>Crack Times: {result['crack_times_display']['online_no_throttling_10_per_second']} </span>
                    </div>
                    """, unsafe_allow_html=True)


            #information displayed when score is 4
            elif password_score == 4:
                st.markdown(f"""
                <div style="padding: 10px; border: 2px solid green; background-color: #d4edda;">
                    <span style='color:green'>
                    Score: {result['score']}</span><br>
                    <span style='color:green';>Strength Rating: Very Strong</span>
                    </br><span style='color:green'>Suggestions: None </span>
                    </br><span style='color:green'>Crack Times: {result['crack_times_display']['online_no_throttling_10_per_second']} </span>
                    </div>
                    """, unsafe_allow_html=True)

    #statement when no password is entered // we should edit to only display when password < 12 chars
    else: 
        st.info("Enter a password that has a minimum of 12 characters. ")
    
#feedback page
if selected == "Feedback":
    st.header("Rate us")

    #feedback type

    #sign up form
    with st.form(key = 'form1'):
        firstname = st.text_input("First Name")
        lastname = st.text_input("Last Name")
        button = st.form_submit_button(label='sign up')
        if button:
            st.success("Hello {} you have created an account".format(firstname))

    feedback_form= st.form(key='feedback_form')
    st.text= ('please rate your satisfaction with Pasword Wizards for each of the following:')
    feedback_type = feedback_form.selectbox("Overall Quality", 
    ["dissastisfied","neither satisfied nor dissastisfied",
     "somewhat satisfied","extremely satisfied"])
    username = feedback_form.text_area("comments")
    button2 = feedback_form.form_submit_button(label='submit')
    if button2 :
        st.write(username.upper())



        
    

    if st.feedback("faces"):

        #response to users feedback
        st.info("Thanks for the Feedback!")

#about page
if selected == "About" :

    st.header("Purpose ")
    st.info("This project will create a user-friendly website to assess the strength of submitted passwords based on length, complexity, and unpredictability. It will provide a password score and actionable improvement suggestions, helping users enhance their online security and protect their personal information.")
    
